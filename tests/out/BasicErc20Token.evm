    /* "./vote.sol":55:93  string public name = "BasicErc20Token" */
  0xc0
    /* "./vote.sol":25:1283  contract BasicErc20Token {... */
  0x40
    /* "./vote.sol":55:93  string public name = "BasicErc20Token" */
  mstore
  0x0f
    /* "./vote.sol":25:1283  contract BasicErc20Token {... */
  0x80
    /* "./vote.sol":55:93  string public name = "BasicErc20Token" */
  dup2
  swap1
  mstore
  0x42617369634572633230546f6b656e0000000000000000000000000000000000
  0xa0
  swap1
  dup2
  mstore
  tag_1
  swap2
  0x00
  swap2
  swap1
  tag_2
  jump	// in
tag_1:
  pop
    /* "./vote.sol":97:125  string public symbol = "BET" */
  0x40
  dup1
  mload
  dup1
  dup3
  add
  swap1
  swap2
  mstore
  0x03
  dup1
  dup3
  mstore
  0x4245540000000000000000000000000000000000000000000000000000000000
  0x20
  swap1
  swap3
  add
  swap2
  dup3
  mstore
  tag_3
  swap2
  0x01
  swap2
  tag_2
  jump	// in
tag_3:
  pop
    /* "./vote.sol":129:154  uint8 public decimals = 0 */
  0x02
  dup1
  sload
  not(0xff)
  and
  swap1
  sstore
    /* "./vote.sol":554:757  constructor() public {... */
  callvalue
    /* "--CODEGEN--":5:7   */
  dup1
  iszero
  tag_4
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_4:
  pop
    /* "./vote.sol":624:634  msg.sender */
  caller
    /* "./vote.sol":581:602  uint256 initialSupply */
  0x00
    /* "./vote.sol":614:635  balanceOf[msg.sender] */
  dup2
  dup2
  mstore
    /* "./vote.sol":614:623  balanceOf */
  0x05
    /* "./vote.sol":614:635  balanceOf[msg.sender] */
  0x20
  mstore
  0x40
  swap1
  keccak256
    /* "./vote.sol":605:608  100 */
  0x64
    /* "./vote.sol":614:651  balanceOf[msg.sender] = initialSupply */
  swap1
  dup2
  swap1
  sstore
    /* "./vote.sol":657:662  owner */
  0x04
    /* "./vote.sol":657:675  owner = msg.sender */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  swap1
  swap3
  or
  swap1
  swap2
  sstore
    /* "./vote.sol":725:736  totalSupply */
  0x03
    /* "./vote.sol":725:752  totalSupply = initialSupply */
  sstore
    /* "./vote.sol":25:1283  contract BasicErc20Token {... */
  jump(tag_7)
tag_2:
  dup3
  dup1
  sload
  0x01
  dup2
  0x01
  and
  iszero
  0x0100
  mul
  sub
  and
  0x02
  swap1
  div
  swap1
  0x00
  mstore
  keccak256(0x00, 0x20)
  swap1
  0x1f
  add
  0x20
  swap1
  div
  dup2
  add
  swap3
  dup3
  0x1f
  lt
  tag_9
  jumpi
  dup1
  mload
  not(0xff)
  and
  dup4
  dup1
  add
  or
  dup6
  sstore
  jump(tag_11)
tag_9:
  dup3
  dup1
  add
  0x01
  add
  dup6
  sstore
  dup3
  iszero
  tag_11
  jumpi
  swap2
  dup3
  add
tag_10:
  dup3
  dup2
  gt
  iszero
  tag_11
  jumpi
  dup3
  mload
  dup3
  sstore
  swap2
  0x20
  add
  swap2
  swap1
  0x01
  add
  swap1
  jump(tag_10)
tag_11:
  pop
  tag_12
  swap3
  swap2
  pop
  tag_13
  jump	// in
tag_12:
  pop
  swap1
  jump	// out
tag_13:
  tag_14
  swap2
  swap1
tag_15:
  dup1
  dup3
  gt
  iszero
  tag_12
  jumpi
  0x00
  dup2
  sstore
  0x01
  add
  jump(tag_15)
tag_14:
  swap1
  jump	// out
tag_7:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "./vote.sol":25:1283  contract BasicErc20Token {... */
      mstore(0x40, 0x80)
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_1:
        /* "./vote.sol":25:1283  contract BasicErc20Token {... */
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x70a08231
      gt
      tag_10
      jumpi
      dup1
      0x70a08231
      eq
      tag_6
      jumpi
      dup1
      0x8da5cb5b
      eq
      tag_7
      jumpi
      dup1
      0x95d89b41
      eq
      tag_8
      jumpi
      dup1
      0xa9059cbb
      eq
      tag_9
      jumpi
      jump(tag_2)
    tag_10:
      dup1
      0x06fdde03
      eq
      tag_3
      jumpi
      dup1
      0x18160ddd
      eq
      tag_4
      jumpi
      dup1
      0x313ce567
      eq
      tag_5
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "./vote.sol":55:93  string public name = "BasicErc20Token" */
    tag_3:
      tag_11
      tag_12
      jump	// in
    tag_11:
      0x40
      dup1
      mload
      0x20
      dup1
      dup3
      mstore
      dup4
      mload
      dup2
      dup4
      add
      mstore
      dup4
      mload
      swap2
      swap3
      dup4
      swap3
      swap1
      dup4
      add
      swap2
      dup6
      add
      swap1
      dup1
      dup4
      dup4
      0x00
        /* "--CODEGEN--":8:108   */
    tag_13:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_15
      jumpi
        /* "--CODEGEN--":90:101   */
      dup2
      dup2
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":71:82   */
      dup4
      dup3
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":8:108   */
      jump(tag_13)
    tag_15:
        /* "--CODEGEN--":12:26   */
      pop
        /* "./vote.sol":55:93  string public name = "BasicErc20Token" */
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_16
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_16:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "./vote.sol":158:184  uint256 public totalSupply */
    tag_4:
      tag_17
      tag_18
      jump	// in
    tag_17:
      0x40
      dup1
      mload
      swap2
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "./vote.sol":129:154  uint8 public decimals = 0 */
    tag_5:
      tag_19
      tag_20
      jump	// in
    tag_19:
      0x40
      dup1
      mload
      0xff
      swap1
      swap3
      and
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "./vote.sol":261:305  mapping(address => uint256) public balanceOf */
    tag_6:
      tag_17
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_22
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_22:
      pop
        /* "./vote.sol":261:305  mapping(address => uint256) public balanceOf */
      calldataload
      sub(shl(0xa0, 0x01), 0x01)
      and
      tag_23
      jump	// in
        /* "./vote.sol":188:208  address public owner */
    tag_7:
      tag_24
      tag_25
      jump	// in
    tag_24:
      0x40
      dup1
      mload
      sub(shl(0xa0, 0x01), 0x01)
      swap1
      swap3
      and
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "./vote.sol":97:125  string public symbol = "BET" */
    tag_8:
      tag_11
      tag_27
      jump	// in
        /* "./vote.sol":780:1281  function transfer(address _to, uint256 _value) public {... */
    tag_9:
      tag_32
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_33
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_33:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "./vote.sol":780:1281  function transfer(address _to, uint256 _value) public {... */
      dup2
      calldataload
      and
      swap1
      0x20
      add
      calldataload
      tag_34
      jump	// in
    tag_32:
      stop
        /* "./vote.sol":55:93  string public name = "BasicErc20Token" */
    tag_12:
      0x00
      dup1
      sload
      0x40
      dup1
      mload
      0x20
      0x02
      0x01
      dup6
      and
      iszero
      0x0100
      mul
      not(0x00)
      add
      swap1
      swap5
      and
      swap4
      swap1
      swap4
      div
      0x1f
      dup2
      add
      dup5
      swap1
      div
      dup5
      mul
      dup3
      add
      dup5
      add
      swap1
      swap3
      mstore
      dup2
      dup2
      mstore
      swap3
      swap2
      dup4
      add
      dup3
      dup3
      dup1
      iszero
      tag_35
      jumpi
      dup1
      0x1f
      lt
      tag_36
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_35)
    tag_36:
      dup3
      add
      swap2
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      swap1
    tag_37:
      dup2
      sload
      dup2
      mstore
      swap1
      0x01
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_37
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_35:
      pop
      pop
      pop
      pop
      pop
      dup2
      jump	// out
        /* "./vote.sol":158:184  uint256 public totalSupply */
    tag_18:
      sload(0x03)
      dup2
      jump	// out
        /* "./vote.sol":129:154  uint8 public decimals = 0 */
    tag_20:
      and(0xff, sload(0x02))
      dup2
      jump	// out
        /* "./vote.sol":261:305  mapping(address => uint256) public balanceOf */
    tag_23:
      mstore(0x20, 0x05)
      0x00
      swap1
      dup2
      mstore
      0x40
      swap1
      keccak256
      sload
      dup2
      jump	// out
        /* "./vote.sol":188:208  address public owner */
    tag_25:
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))
      dup2
      jump	// out
        /* "./vote.sol":97:125  string public symbol = "BET" */
    tag_27:
      0x01
      dup1
      sload
      0x40
      dup1
      mload
      0x20
      0x02
      dup5
      dup7
      and
      iszero
      0x0100
      mul
      not(0x00)
      add
      swap1
      swap5
      and
      swap4
      swap1
      swap4
      div
      0x1f
      dup2
      add
      dup5
      swap1
      div
      dup5
      mul
      dup3
      add
      dup5
      add
      swap1
      swap3
      mstore
      dup2
      dup2
      mstore
      swap3
      swap2
      dup4
      add
      dup3
      dup3
      dup1
      iszero
      tag_35
      jumpi
      dup1
      0x1f
      lt
      tag_36
      jumpi
      0x0100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_35)
        /* "./vote.sol":780:1281  function transfer(address _to, uint256 _value) public {... */
    tag_34:
        /* "./vote.sol":858:868  msg.sender */
      caller
        /* "./vote.sol":848:869  balanceOf[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "./vote.sol":848:857  balanceOf */
      0x05
        /* "./vote.sol":848:869  balanceOf[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "./vote.sol":848:879  balanceOf[msg.sender] >= _value */
      dup2
      gt
      iszero
        /* "./vote.sol":840:880  require(balanceOf[msg.sender] >= _value) */
      tag_42
      jumpi
      0x00
      dup1
      revert
    tag_42:
      sub(shl(0xa0, 0x01), 0x01)
        /* "./vote.sol":954:968  balanceOf[_to] */
      dup3
      and
      0x00
      swap1
      dup2
      mstore
        /* "./vote.sol":954:963  balanceOf */
      0x05
        /* "./vote.sol":954:968  balanceOf[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "./vote.sol":928:951  balanceOf[_to] + _value */
      dup2
      dup2
      add
        /* "./vote.sol":928:968  balanceOf[_to] + _value < balanceOf[_to] */
      lt
        /* "./vote.sol":924:978  if (balanceOf[_to] + _value < balanceOf[_to]) revert() */
      iszero
      tag_43
      jumpi
        /* "./vote.sol":970:978  revert() */
      0x00
      dup1
      revert
        /* "./vote.sol":924:978  if (balanceOf[_to] + _value < balanceOf[_to]) revert() */
    tag_43:
        /* "./vote.sol":1051:1061  msg.sender */
      caller
        /* "./vote.sol":1041:1062  balanceOf[msg.sender] */
      0x00
      dup2
      dup2
      mstore
        /* "./vote.sol":1041:1050  balanceOf */
      0x05
        /* "./vote.sol":1041:1062  balanceOf[msg.sender] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
        /* "./vote.sol":1041:1072  balanceOf[msg.sender] -= _value */
      dup1
      sload
      dup7
      swap1
      sub
      swap1
      sstore
      sub(shl(0xa0, 0x01), 0x01)
        /* "./vote.sol":1110:1124  balanceOf[_to] */
      dup7
      and
      dup1
      dup5
      mstore
      swap3
      dup2
      swap1
      keccak256
        /* "./vote.sol":1110:1134  balanceOf[_to] += _value */
      dup1
      sload
      dup7
      add
      swap1
      sstore
        /* "./vote.sol":1182:1215  Transfer(msg.sender, _to, _value) */
      dup1
      mload
      dup6
      dup2
      mstore
      swap1
      mload
        /* "./vote.sol":1110:1124  balanceOf[_to] */
      swap3
      swap4
        /* "./vote.sol":1051:1061  msg.sender */
      swap3
        /* "./vote.sol":1182:1215  Transfer(msg.sender, _to, _value) */
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap3
      swap2
      dup2
      swap1
      sub
      swap1
      swap2
      add
      swap1
      log3
        /* "./vote.sol":780:1281  function transfer(address _to, uint256 _value) public {... */
      pop
      pop
      jump	// out

    auxdata: 0xa265627a7a7230582076af8e6865d147d6a3c1f322bbd055d800afb02d28c89bc2f0424ddf711fdd4d64736f6c63430005090032
}
