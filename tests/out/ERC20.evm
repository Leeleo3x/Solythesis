    /* "test.sol":2304:2417  contract ERC20 is ERC20Basic {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "test.sol":2304:2417  contract ERC20 is ERC20Basic {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "test.sol":2304:2417  contract ERC20 is ERC20Basic {... */
      mstore(0x40, 0x80)
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_1:
        /* "test.sol":2304:2417  contract ERC20 is ERC20Basic {... */
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x18160ddd
      eq
      tag_3
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "test.sol":1048:1074  uint256 public totalSupply */
    tag_3:
      tag_4
      tag_5
      jump	// in
    tag_4:
      0x40
      dup1
      mload
      swap2
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
    tag_5:
      storebegin
      sload(0x00)
      dup2
      storeend
      jump	// out

    auxdata: 0xa265627a7a72305820677f88c2b51597238d8e746520c7c0fb15f8963887c92b6a18adbcf25dd6cf4764736f6c63782b302e352e392d646576656c6f702e323031392e372e32362b636f6d6d69742e63363862633334652e6d6f64005b
}
