    /* "test.sol":2687:4805  contract StandardToken is ERC20, BasicToken {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "test.sol":2687:4805  contract StandardToken is ERC20, BasicToken {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "test.sol":2687:4805  contract StandardToken is ERC20, BasicToken {... */
      mstore(0x40, 0x80)
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_1:
        /* "test.sol":2687:4805  contract StandardToken is ERC20, BasicToken {... */
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x095ea7b3
      eq
      tag_3
      jumpi
      dup1
      0x18160ddd
      eq
      tag_4
      jumpi
      dup1
      0x23b872dd
      eq
      tag_5
      jumpi
      dup1
      0x70a08231
      eq
      tag_6
      jumpi
      dup1
      0xa9059cbb
      eq
      tag_7
      jumpi
      dup1
      0xdd62ed3e
      eq
      tag_8
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "test.sol":4160:4348  function approve(address _spender, uint256 _value) public returns (bool) {... */
    tag_3:
      tag_9
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_10
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_10:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test.sol":4160:4348  function approve(address _spender, uint256 _value) public returns (bool) {... */
      dup2
      calldataload
      and
      swap1
      0x20
      add
      calldataload
      tag_11
      jump	// in
    tag_9:
      0x40
      dup1
      mload
      swap2
      iszero
      iszero
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "test.sol":1048:1074  uint256 public totalSupply */
    tag_4:
      tag_12
      tag_13
      jump	// in
    tag_12:
      0x40
      dup1
      mload
      swap2
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "test.sol":3079:3537  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */
    tag_5:
      tag_9
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_15
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_15:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test.sol":3079:3537  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */
      dup2
      calldataload
      dup2
      and
      swap2
      0x20
      dup2
      add
      calldataload
      swap1
      swap2
      and
      swap1
      0x40
      add
      calldataload
      tag_16
      jump	// in
        /* "test.sol":2104:2211  function balanceOf(address _owner) public view returns (uint256 balance) {... */
    tag_6:
      tag_12
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_18
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_18:
      pop
        /* "test.sol":2104:2211  function balanceOf(address _owner) public view returns (uint256 balance) {... */
      calldataload
      sub(shl(0xa0, 0x01), 0x01)
      and
      tag_19
      jump	// in
        /* "test.sol":1504:1902  function transfer(address _to, uint256 _value) public returns (bool) {... */
    tag_7:
      tag_9
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_21
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_21:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test.sol":1504:1902  function transfer(address _to, uint256 _value) public returns (bool) {... */
      dup2
      calldataload
      and
      swap1
      0x20
      add
      calldataload
      tag_22
      jump	// in
        /* "test.sol":4667:4803  function allowance(address _owner, address _spender) public view returns (uint256 remaining) {... */
    tag_8:
      tag_12
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_24
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_24:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "test.sol":4667:4803  function allowance(address _owner, address _spender) public view returns (uint256 remaining) {... */
      dup2
      calldataload
      dup2
      and
      swap2
      0x20
      add
      calldataload
      and
      tag_25
      jump	// in
        /* "test.sol":4160:4348  function approve(address _spender, uint256 _value) public returns (bool) {... */
    tag_11:
        /* "test.sol":4227:4231  bool */
      0x00
        /* "test.sol":4271:4277  _value */
      dup2
        /* "test.sol":4239:4246  allowed */
      0x02
        /* "test.sol":4239:4258  allowed[msg.sender] */
      storebegin
        /* "test.sol":4247:4257  msg.sender */
      caller
        /* "test.sol":4239:4258  allowed[msg.sender] */
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":4239:4268  allowed[msg.sender][_spender] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":4239:4277  allowed[msg.sender][_spender] = _value */
      sstore
        /* "test.sol":4288:4326  Approval(msg.sender, _spender, _value) */
      0x40
      dup1
      mload
      dup4
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      swap2
        /* "test.sol":4297:4307  msg.sender */
      caller
      swap2
        /* "test.sol":4288:4326  Approval(msg.sender, _spender, _value) */
      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
      swap2
      dup2
      swap1
      sub
      0x20
      add
      swap1
      log3
      pop
        /* "test.sol":4339:4343  true */
      0x01
        /* "test.sol":4160:4348  function approve(address _spender, uint256 _value) public returns (bool) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "test.sol":1048:1074  uint256 public totalSupply */
    tag_13:
      storebegin
      sload(0x00)
      dup2
      storeend
      jump	// out
        /* "test.sol":3079:3537  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */
    tag_16:
        /* "test.sol":3161:3165  bool */
      0x00
      sub(shl(0xa0, 0x01), 0x01)
        /* "test.sol":3181:3198  _to != address(0) */
      dup4
      and
        /* "test.sol":3173:3199  require(_to != address(0)) */
      tag_28
      jumpi
      0x00
      dup1
      revert
    tag_28:
        /* "test.sol":3222:3223  0 */
      0x00
        /* "test.sol":3213:3219  _value */
      dup3
        /* "test.sol":3213:3223  _value > 0 */
      gt
        /* "test.sol":3213:3252  _value > 0 && _value <= balances[_from] */
      dup1
      iszero
      tag_29
      jumpi
      pop
        /* "test.sol":3237:3245  balances */
      0x01
        /* "test.sol":3237:3252  balances[_from] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
        /* "test.sol":3227:3233  _value */
      dup3
        /* "test.sol":3227:3252  _value <= balances[_from] */
      gt
      iszero
        /* "test.sol":3213:3252  _value > 0 && _value <= balances[_from] */
    tag_29:
        /* "test.sol":3205:3253  require(_value > 0 && _value <= balances[_from]) */
      tag_30
      jumpi
      0x00
      dup1
      revert
    tag_30:
        /* "test.sol":3277:3284  allowed */
      0x02
        /* "test.sol":3277:3291  allowed[_from] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":3277:3303  allowed[_from][msg.sender] */
      storebegin
        /* "test.sol":3292:3302  msg.sender */
      caller
        /* "test.sol":3277:3303  allowed[_from][msg.sender] */
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
        /* "test.sol":3267:3273  _value */
      dup3
        /* "test.sol":3267:3303  _value <= allowed[_from][msg.sender] */
      gt
      iszero
        /* "test.sol":3259:3304  require(_value <= allowed[_from][msg.sender]) */
      tag_31
      jumpi
      0x00
      dup1
      revert
    tag_31:
        /* "test.sol":3329:3356  balances[_from].sub(_value) */
      tag_32
        /* "test.sol":3349:3355  _value */
      dup3
        /* "test.sol":3329:3337  balances */
      0x01
        /* "test.sol":3329:3344  balances[_from] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup8
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
      swap1
        /* "test.sol":3329:3356  balances[_from].sub(_value) */
      0xffffffff
        /* "test.sol":3329:3348  balances[_from].sub */
      tag_33
        /* "test.sol":3329:3356  balances[_from].sub(_value) */
      and
      jump	// in
    tag_32:
        /* "test.sol":3311:3319  balances */
      0x01
        /* "test.sol":3311:3326  balances[_from] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup7
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":3311:3356  balances[_from] = balances[_from].sub(_value) */
      sstore
        /* "test.sol":3378:3403  balances[_to].add(_value) */
      tag_34
        /* "test.sol":3396:3402  _value */
      dup3
        /* "test.sol":3378:3386  balances */
      0x01
        /* "test.sol":3378:3391  balances[_to] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup7
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
      swap1
        /* "test.sol":3378:3403  balances[_to].add(_value) */
      0xffffffff
        /* "test.sol":3378:3395  balances[_to].add */
      tag_35
        /* "test.sol":3378:3403  balances[_to].add(_value) */
      and
      jump	// in
    tag_34:
        /* "test.sol":3362:3370  balances */
      0x01
        /* "test.sol":3362:3375  balances[_to] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":3362:3403  balances[_to] = balances[_to].add(_value) */
      sstore
        /* "test.sol":3438:3476  allowed[_from][msg.sender].sub(_value) */
      tag_36
        /* "test.sol":3469:3475  _value */
      dup3
        /* "test.sol":3438:3445  allowed */
      0x02
        /* "test.sol":3438:3452  allowed[_from] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup8
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":3438:3464  allowed[_from][msg.sender] */
      storebegin
        /* "test.sol":3453:3463  msg.sender */
      caller
        /* "test.sol":3438:3464  allowed[_from][msg.sender] */
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
      swap1
        /* "test.sol":3438:3476  allowed[_from][msg.sender].sub(_value) */
      0xffffffff
        /* "test.sol":3438:3468  allowed[_from][msg.sender].sub */
      tag_33
        /* "test.sol":3438:3476  allowed[_from][msg.sender].sub(_value) */
      and
      jump	// in
    tag_36:
        /* "test.sol":3409:3416  allowed */
      0x02
        /* "test.sol":3409:3423  allowed[_from] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup7
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":3409:3435  allowed[_from][msg.sender] */
      storebegin
        /* "test.sol":3424:3434  msg.sender */
      caller
        /* "test.sol":3409:3435  allowed[_from][msg.sender] */
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":3409:3476  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value) */
      sstore
        /* "test.sol":3487:3515  Transfer(_from, _to, _value) */
      0x40
      dup1
      mload
      dup4
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
      dup1
      dup7
      and
      swap3
      swap1
      dup8
      and
      swap2
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap2
      dup2
      swap1
      sub
      0x20
      add
      swap1
      log3
      pop
        /* "test.sol":3528:3532  true */
      0x01
        /* "test.sol":3079:3537  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */
      swap4
      swap3
      pop
      pop
      pop
      jump	// out
        /* "test.sol":2104:2211  function balanceOf(address _owner) public view returns (uint256 balance) {... */
    tag_19:
        /* "test.sol":2160:2175  uint256 balance */
      0x00
        /* "test.sol":2190:2198  balances */
      0x01
        /* "test.sol":2190:2206  balances[_owner] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup4
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
      swap3
        /* "test.sol":2104:2211  function balanceOf(address _owner) public view returns (uint256 balance) {... */
      swap2
      pop
      pop
      jump	// out
        /* "test.sol":1504:1902  function transfer(address _to, uint256 _value) public returns (bool) {... */
    tag_22:
        /* "test.sol":1567:1571  bool */
      0x00
      sub(shl(0xa0, 0x01), 0x01)
        /* "test.sol":1587:1604  _to != address(0) */
      dup4
      and
        /* "test.sol":1579:1605  require(_to != address(0)) */
      tag_39
      jumpi
      0x00
      dup1
      revert
    tag_39:
        /* "test.sol":1628:1629  0 */
      0x00
        /* "test.sol":1619:1625  _value */
      dup3
        /* "test.sol":1619:1629  _value > 0 */
      gt
        /* "test.sol":1619:1663  _value > 0 && _value <= balances[msg.sender] */
      dup1
      iszero
      tag_40
      jumpi
      pop
        /* "test.sol":1643:1651  balances */
      0x01
        /* "test.sol":1643:1663  balances[msg.sender] */
      storebegin
        /* "test.sol":1652:1662  msg.sender */
      caller
        /* "test.sol":1643:1663  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
        /* "test.sol":1633:1639  _value */
      dup3
        /* "test.sol":1633:1663  _value <= balances[msg.sender] */
      gt
      iszero
        /* "test.sol":1619:1663  _value > 0 && _value <= balances[msg.sender] */
    tag_40:
        /* "test.sol":1611:1664  require(_value > 0 && _value <= balances[msg.sender]) */
      tag_41
      jumpi
      0x00
      dup1
      revert
    tag_41:
        /* "test.sol":1757:1789  balances[msg.sender].sub(_value) */
      tag_42
        /* "test.sol":1782:1788  _value */
      dup3
        /* "test.sol":1757:1765  balances */
      0x01
        /* "test.sol":1757:1777  balances[msg.sender] */
      storebegin
        /* "test.sol":1766:1776  msg.sender */
      caller
        /* "test.sol":1757:1777  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
      swap1
        /* "test.sol":1757:1789  balances[msg.sender].sub(_value) */
      0xffffffff
        /* "test.sol":1757:1781  balances[msg.sender].sub */
      tag_33
        /* "test.sol":1757:1789  balances[msg.sender].sub(_value) */
      and
      jump	// in
    tag_42:
        /* "test.sol":1734:1742  balances */
      0x01
        /* "test.sol":1734:1754  balances[msg.sender] */
      storebegin
        /* "test.sol":1743:1753  msg.sender */
      caller
        /* "test.sol":1734:1754  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":1734:1789  balances[msg.sender] = balances[msg.sender].sub(_value) */
      sstore
        /* "test.sol":1811:1836  balances[_to].add(_value) */
      tag_43
        /* "test.sol":1829:1835  _value */
      dup3
        /* "test.sol":1811:1819  balances */
      0x01
        /* "test.sol":1811:1824  balances[_to] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup7
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
      swap1
        /* "test.sol":1811:1836  balances[_to].add(_value) */
      0xffffffff
        /* "test.sol":1811:1828  balances[_to].add */
      tag_35
        /* "test.sol":1811:1836  balances[_to].add(_value) */
      and
      jump	// in
    tag_43:
        /* "test.sol":1795:1803  balances */
      0x01
        /* "test.sol":1795:1808  balances[_to] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":1795:1836  balances[_to] = balances[_to].add(_value) */
      sstore
        /* "test.sol":1847:1880  Transfer(msg.sender, _to, _value) */
      0x40
      dup1
      mload
      dup4
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      swap2
        /* "test.sol":1856:1866  msg.sender */
      caller
      swap2
        /* "test.sol":1847:1880  Transfer(msg.sender, _to, _value) */
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap2
      dup2
      swap1
      sub
      0x20
      add
      swap1
      log3
      pop
        /* "test.sol":1893:1897  true */
      0x01
        /* "test.sol":1504:1902  function transfer(address _to, uint256 _value) public returns (bool) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "test.sol":4667:4803  function allowance(address _owner, address _spender) public view returns (uint256 remaining) {... */
    tag_25:
        /* "test.sol":4741:4758  uint256 remaining */
      0x00
        /* "test.sol":4773:4780  allowed */
      0x02
        /* "test.sol":4773:4788  allowed[_owner] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup5
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
        /* "test.sol":4773:4798  allowed[_owner][_spender] */
      storebegin
      sub(shl(0xa0, 0x01), 0x01)
      dup4
      and
      0x00
      swap1
      dup2
      mstore
      0x20
      swap2
      swap1
      swap2
      mstore
      0x40
      dup2
      keccak256
      swap1
      storeend
      pop
      sload
      swap4
        /* "test.sol":4667:4803  function allowance(address _owner, address _spender) public view returns (uint256 remaining) {... */
      swap3
      pop
      pop
      pop
      jump	// out
        /* "test.sol":649:759  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_33:
        /* "test.sol":707:714  uint256 */
      0x00
        /* "test.sol":734:735  a */
      dup3
        /* "test.sol":729:730  b */
      dup3
        /* "test.sol":729:735  b <= a */
      gt
      iszero
        /* "test.sol":722:736  assert(b <= a) */
      tag_46
      jumpi
      invalid
    tag_46:
      pop
        /* "test.sol":749:754  a - b */
      swap1
      sub
      swap1
        /* "test.sol":649:759  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */
      jump	// out
        /* "test.sol":763:892  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_35:
        /* "test.sol":821:828  uint256 */
      0x00
        /* "test.sol":848:853  a + b */
      dup3
      dup3
      add
        /* "test.sol":866:872  c >= a */
      dup4
      dup2
      lt
      iszero
        /* "test.sol":859:873  assert(c >= a) */
      tag_48
      jumpi
      invalid
    tag_48:
        /* "test.sol":886:887  c */
      swap4
        /* "test.sol":763:892  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */
      swap3
      pop
      pop
      pop
      jump	// out

    auxdata: 0xa265627a7a723058206907e3b27aa953848768c6312fc396beddfd299e7db35ccdde57e78e071dc05e64736f6c63782b302e352e392d646576656c6f702e323031392e372e32362b636f6d6d69742e63363862633334652e6d6f64005b
}
