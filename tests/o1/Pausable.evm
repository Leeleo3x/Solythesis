    /* "t1.sol":3929:4361  contract Pausable is Ownable {... */
  mstore(0x40, 0x80)
    /* "t1.sol":4019:4024  false */
  0x00
    /* "t1.sol":3998:4024  bool public paused = false */
  dup1
  sload
  not(sub(shl(0xa8, 0x01), 0x01))
    /* "t1.sol":3631:3649  owner = msg.sender */
  and
    /* "t1.sol":3639:3649  msg.sender */
  caller
    /* "t1.sol":3631:3649  owner = msg.sender */
  or
  swap1
  sstore
    /* "t1.sol":3929:4361  contract Pausable is Ownable {... */
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "t1.sol":3929:4361  contract Pausable is Ownable {... */
      mstore(0x40, 0x80)
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_1:
        /* "t1.sol":3929:4361  contract Pausable is Ownable {... */
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x3f4ba83a
      eq
      tag_3
      jumpi
      dup1
      0x5c975abb
      eq
      tag_4
      jumpi
      dup1
      0x8456cb59
      eq
      tag_5
      jumpi
      dup1
      0x8da5cb5b
      eq
      tag_6
      jumpi
      dup1
      0xf2fde38b
      eq
      tag_7
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "t1.sol":4254:4359  function unpause () onlyOwner whenPaused public {... */
    tag_3:
      tag_8
      tag_9
      jump	// in
    tag_8:
      stop
        /* "t1.sol":3998:4024  bool public paused = false */
    tag_4:
      tag_10
      tag_11
      jump	// in
    tag_10:
      0x40
      dup1
      mload
      swap2
      iszero
      iszero
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "t1.sol":4148:4251  function pause () onlyOwner whenNotPaused public {... */
    tag_5:
      tag_8
      tag_13
      jump	// in
        /* "t1.sol":3492:3512  address public owner */
    tag_6:
      tag_14
      tag_15
      jump	// in
    tag_14:
      0x40
      dup1
      mload
      sub(shl(0xa0, 0x01), 0x01)
      swap1
      swap3
      and
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "t1.sol":3739:3926  function transferOwnership (address newOwner) onlyOwner public {... */
    tag_7:
      tag_8
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_17
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_17:
      pop
        /* "t1.sol":3739:3926  function transferOwnership (address newOwner) onlyOwner public {... */
      calldataload
      sub(shl(0xa0, 0x01), 0x01)
      and
      tag_18
      jump	// in
        /* "t1.sol":4254:4359  function unpause () onlyOwner whenPaused public {... */
    tag_9:
        /* "t1.sol":3718:3723  owner */
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))
        /* "t1.sol":3704:3714  msg.sender */
      caller
        /* "t1.sol":3704:3723  msg.sender == owner */
      eq
        /* "t1.sol":3696:3724  require(msg.sender == owner) */
      tag_20
      jumpi
      0x00
      dup1
      revert
    tag_20:
        /* "t1.sol":4126:4132  paused */
      sload(0x00)
      shl(0xa0, 0x01)
      swap1
      div
      0xff
      and
        /* "t1.sol":4118:4133  require(paused) */
      tag_22
      jumpi
      0x00
      dup1
      revert
    tag_22:
        /* "t1.sol":4317:4322  false */
      0x00
        /* "t1.sol":4308:4322  paused = false */
      dup1
      sload
      not(mul(0xff, shl(0xa0, 0x01)))
      and
      dup2
      sstore
        /* "t1.sol":4333:4342  Unpause() */
      mload(0x40)
      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
      swap2
        /* "t1.sol":4317:4322  false */
      swap1
        /* "t1.sol":4333:4342  Unpause() */
      log1
        /* "t1.sol":4254:4359  function unpause () onlyOwner whenPaused public {... */
      jump	// out
        /* "t1.sol":3998:4024  bool public paused = false */
    tag_11:
      sload(0x00)
      shl(0xa0, 0x01)
      swap1
      div
      0xff
      and
      dup2
      jump	// out
        /* "t1.sol":4148:4251  function pause () onlyOwner whenNotPaused public {... */
    tag_13:
        /* "t1.sol":3718:3723  owner */
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))
        /* "t1.sol":3704:3714  msg.sender */
      caller
        /* "t1.sol":3704:3723  msg.sender == owner */
      eq
        /* "t1.sol":3696:3724  require(msg.sender == owner) */
      tag_25
      jumpi
      0x00
      dup1
      revert
    tag_25:
        /* "t1.sol":4068:4074  paused */
      sload(0x00)
      shl(0xa0, 0x01)
      swap1
      div
      0xff
      and
        /* "t1.sol":4067:4074  !paused */
      iszero
        /* "t1.sol":4059:4075  require(!paused) */
      tag_27
      jumpi
      0x00
      dup1
      revert
    tag_27:
        /* "t1.sol":4203:4209  paused */
      0x00
        /* "t1.sol":4203:4216  paused = true */
      dup1
      sload
      not(mul(0xff, shl(0xa0, 0x01)))
      and
      shl(0xa0, 0x01)
      or
      dup2
      sstore
        /* "t1.sol":4227:4234  Pause() */
      mload(0x40)
      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
      swap2
        /* "t1.sol":4203:4209  paused */
      swap1
        /* "t1.sol":4227:4234  Pause() */
      log1
        /* "t1.sol":4148:4251  function pause () onlyOwner whenNotPaused public {... */
      jump	// out
        /* "t1.sol":3492:3512  address public owner */
    tag_15:
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))
      dup2
      jump	// out
        /* "t1.sol":3739:3926  function transferOwnership (address newOwner) onlyOwner public {... */
    tag_18:
        /* "t1.sol":3718:3723  owner */
      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))
        /* "t1.sol":3704:3714  msg.sender */
      caller
        /* "t1.sol":3704:3723  msg.sender == owner */
      eq
        /* "t1.sol":3696:3724  require(msg.sender == owner) */
      tag_30
      jumpi
      0x00
      dup1
      revert
    tag_30:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t1.sol":3816:3838  newOwner != address(0) */
      dup2
      and
        /* "t1.sol":3808:3839  require(newOwner != address(0)) */
      tag_32
      jumpi
      0x00
      dup1
      revert
    tag_32:
        /* "t1.sol":3871:3876  owner */
      0x00
      dup1
      sload
        /* "t1.sol":3850:3887  OwnershipTransferred(owner, newOwner) */
      mload(0x40)
      sub(shl(0xa0, 0x01), 0x01)
      dup1
      dup6
      and
      swap4
        /* "t1.sol":3871:3876  owner */
      swap3
      and
      swap2
        /* "t1.sol":3850:3887  OwnershipTransferred(owner, newOwner) */
      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
      swap2
      log3
        /* "t1.sol":3893:3898  owner */
      0x00
        /* "t1.sol":3893:3909  owner = newOwner */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
      sub(shl(0xa0, 0x01), 0x01)
      swap3
      swap1
      swap3
      and
      swap2
      swap1
      swap2
      or
      swap1
      sstore
        /* "t1.sol":3739:3926  function transferOwnership (address newOwner) onlyOwner public {... */
      jump	// out

    auxdata: 0xa165627a7a723058208c675952cd36cc2f638dad0160f1b560ed37a9cc48fc66d22d601331f693d1fd0029
}
