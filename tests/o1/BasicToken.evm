    /* "t1.sol":681:1851  contract BasicToken is ERC20Basic {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "t1.sol":681:1851  contract BasicToken is ERC20Basic {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "t1.sol":681:1851  contract BasicToken is ERC20Basic {... */
      mstore(0x40, 0x80)
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_1:
        /* "t1.sol":681:1851  contract BasicToken is ERC20Basic {... */
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x18160ddd
      eq
      tag_3
      jumpi
      dup1
      0x70a08231
      eq
      tag_4
      jumpi
      dup1
      0xa9059cbb
      eq
      tag_5
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "t1.sol":576:602  uint256 public totalSupply */
    tag_3:
      tag_6
      tag_7
      jump	// in
    tag_6:
      0x40
      dup1
      mload
      swap2
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "t1.sol":1715:1849  function balanceOf (address _owner) public view returns (uint256 balance) {... */
    tag_4:
      tag_6
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_9
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_9:
      pop
        /* "t1.sol":1715:1849  function balanceOf (address _owner) public view returns (uint256 balance) {... */
      calldataload
      sub(shl(0xa0, 0x01), 0x01)
      and
      tag_10
      jump	// in
        /* "t1.sol":811:1712  function transfer (address _to, uint256 _value) public returns (bool) {... */
    tag_5:
      tag_11
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_12
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_12:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "t1.sol":811:1712  function transfer (address _to, uint256 _value) public returns (bool) {... */
      dup2
      calldataload
      and
      swap1
      0x20
      add
      calldataload
      tag_13
      jump	// in
    tag_11:
      0x40
      dup1
      mload
      swap2
      iszero
      iszero
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "t1.sol":576:602  uint256 public totalSupply */
    tag_7:
      sload(0x00)
      dup2
      jump	// out
        /* "t1.sol":1715:1849  function balanceOf (address _owner) public view returns (uint256 balance) {... */
    tag_10:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t1.sol":1810:1826  balances[_owner] */
      and
        /* "t1.sol":1772:1787  uint256 balance */
      0x00
        /* "t1.sol":1810:1826  balances[_owner] */
      swap1
      dup2
      mstore
        /* "t1.sol":1810:1818  balances */
      0x02
        /* "t1.sol":1810:1826  balances[_owner] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
      swap1
        /* "t1.sol":1715:1849  function balanceOf (address _owner) public view returns (uint256 balance) {... */
      jump	// out
        /* "t1.sol":811:1712  function transfer (address _to, uint256 _value) public returns (bool) {... */
    tag_13:
        /* "t1.sol":875:879  bool */
      0x00
      sub(shl(0xa0, 0x01), 0x01)
        /* "t1.sol":895:912  _to != address(0) */
      dup4
      and
        /* "t1.sol":887:913  require(_to != address(0)) */
      tag_16
      jumpi
      0x00
      dup1
      revert
    tag_16:
        /* "t1.sol":936:937  0 */
      0x00
        /* "t1.sol":927:933  _value */
      dup3
        /* "t1.sol":927:937  _value > 0 */
      gt
        /* "t1.sol":927:971  _value > 0 && _value <= balances[msg.sender] */
      dup1
      iszero
      tag_17
      jumpi
      pop
        /* "t1.sol":960:970  msg.sender */
      caller
        /* "t1.sol":951:971  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "t1.sol":951:959  balances */
      0x02
        /* "t1.sol":951:971  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t1.sol":941:971  _value <= balances[msg.sender] */
      dup3
      gt
      iszero
        /* "t1.sol":927:971  _value > 0 && _value <= balances[msg.sender] */
    tag_17:
        /* "t1.sol":919:972  require(_value > 0 && _value <= balances[msg.sender]) */
      tag_18
      jumpi
      0x00
      dup1
      revert
    tag_18:
        /* "t1.sol":1027:1037  msg.sender */
      caller
        /* "t1.sol":1018:1038  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "t1.sol":1018:1026  balances */
      0x02
        /* "t1.sol":1018:1038  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t1.sol":1003:1014  sum_balance */
      sload(0x01)
        /* "t1.sol":1003:1038  sum_balance >= balances[msg.sender] */
      lt
      iszero
        /* "t1.sol":996:1039  assert(sum_balance >= balances[msg.sender]) */
      tag_19
      jumpi
      invalid
    tag_19:
        /* "t1.sol":1073:1083  msg.sender */
      caller
        /* "t1.sol":1064:1084  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "t1.sol":1064:1072  balances */
      0x02
        /* "t1.sol":1064:1084  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      dup1
      sload
        /* "t1.sol":1049:1060  sum_balance */
      0x01
        /* "t1.sol":1049:1084  sum_balance -= balances[msg.sender] */
      dup1
      sload
      swap2
      swap1
      swap2
      sub
      swap1
      sstore
        /* "t1.sol":1123:1143  balances[msg.sender] */
      sload
        /* "t1.sol":1123:1155  balances[msg.sender].sub(_value) */
      tag_20
      swap1
        /* "t1.sol":1148:1154  _value */
      dup4
        /* "t1.sol":1123:1155  balances[msg.sender].sub(_value) */
      0xffffffff
        /* "t1.sol":1123:1147  balances[msg.sender].sub */
      tag_21
        /* "t1.sol":1123:1155  balances[msg.sender].sub(_value) */
      and
      jump	// in
    tag_20:
        /* "t1.sol":1109:1119  msg.sender */
      caller
        /* "t1.sol":1100:1120  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "t1.sol":1100:1108  balances */
      0x02
        /* "t1.sol":1100:1120  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "t1.sol":1100:1155  balances[msg.sender] = balances[msg.sender].sub(_value) */
      dup2
      dup2
      sstore
        /* "t1.sol":1173:1184  sum_balance */
      0x01
        /* "t1.sol":1173:1208  sum_balance += balances[msg.sender] */
      dup1
      sload
      swap1
      swap3
      add
      swap2
      dup3
      swap1
      sstore
        /* "t1.sol":1240:1260  balances[msg.sender] */
      sload
      gt
        /* "t1.sol":1225:1260  sum_balance >= balances[msg.sender] */
      iszero
        /* "t1.sol":1218:1261  assert(sum_balance >= balances[msg.sender]) */
      tag_22
      jumpi
      invalid
    tag_22:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t1.sol":1321:1334  balances[_to] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "t1.sol":1321:1329  balances */
      0x02
        /* "t1.sol":1321:1334  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t1.sol":1306:1317  sum_balance */
      sload(0x01)
        /* "t1.sol":1306:1334  sum_balance >= balances[_to] */
      lt
      iszero
        /* "t1.sol":1299:1335  assert(sum_balance >= balances[_to]) */
      tag_23
      jumpi
      invalid
    tag_23:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t1.sol":1360:1373  balances[_to] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "t1.sol":1360:1368  balances */
      0x02
        /* "t1.sol":1360:1373  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      dup1
      sload
        /* "t1.sol":1345:1356  sum_balance */
      0x01
        /* "t1.sol":1345:1373  sum_balance -= balances[_to] */
      dup1
      sload
      swap2
      swap1
      swap2
      sub
      swap1
      sstore
        /* "t1.sol":1405:1418  balances[_to] */
      sload
        /* "t1.sol":1405:1430  balances[_to].add(_value) */
      tag_24
      swap1
        /* "t1.sol":1423:1429  _value */
      dup4
        /* "t1.sol":1405:1430  balances[_to].add(_value) */
      0xffffffff
        /* "t1.sol":1405:1422  balances[_to].add */
      tag_25
        /* "t1.sol":1405:1430  balances[_to].add(_value) */
      and
      jump	// in
    tag_24:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t1.sol":1389:1402  balances[_to] */
      dup5
      and
      0x00
      swap1
      dup2
      mstore
        /* "t1.sol":1389:1397  balances */
      0x02
        /* "t1.sol":1389:1402  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "t1.sol":1389:1430  balances[_to] = balances[_to].add(_value) */
      dup2
      dup2
      sstore
        /* "t1.sol":1448:1459  sum_balance */
      0x01
        /* "t1.sol":1448:1476  sum_balance += balances[_to] */
      dup1
      sload
      swap1
      swap3
      add
      swap2
      dup3
      swap1
      sstore
        /* "t1.sol":1508:1521  balances[_to] */
      sload
      gt
        /* "t1.sol":1493:1521  sum_balance >= balances[_to] */
      iszero
        /* "t1.sol":1486:1522  assert(sum_balance >= balances[_to]) */
      tag_26
      jumpi
      invalid
    tag_26:
        /* "t1.sol":1547:1580  Transfer(msg.sender, _to, _value) */
      0x40
      dup1
      mload
      dup4
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      swap2
        /* "t1.sol":1556:1566  msg.sender */
      caller
      swap2
        /* "t1.sol":1547:1580  Transfer(msg.sender, _to, _value) */
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap2
      dup2
      swap1
      sub
      0x20
      add
      swap1
      log3
        /* "t1.sol":1616:1627  sum_balance */
      sload(0x01)
        /* "t1.sol":1601:1612  totalSupply */
      sload(0x00)
        /* "t1.sol":1601:1627  totalSupply == sum_balance */
      eq
        /* "t1.sol":1594:1628  assert(totalSupply == sum_balance) */
      tag_27
      jumpi
      invalid
    tag_27:
      pop
        /* "t1.sol":1643:1647  true */
      0x01
        /* "t1.sol":811:1712  function transfer (address _to, uint256 _value) public returns (bool) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "t1.sol":305:416  function sub (uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_21:
        /* "t1.sol":364:371  uint256 */
      0x00
        /* "t1.sol":391:392  a */
      dup3
        /* "t1.sol":386:387  b */
      dup3
        /* "t1.sol":386:392  b <= a */
      gt
      iszero
        /* "t1.sol":379:393  assert(b <= a) */
      tag_30
      jumpi
      invalid
    tag_30:
      pop
        /* "t1.sol":406:411  a - b */
      swap1
      sub
      swap1
        /* "t1.sol":305:416  function sub (uint256 a, uint256 b) internal pure returns (uint256) {... */
      jump	// out
        /* "t1.sol":419:549  function add (uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_25:
        /* "t1.sol":478:485  uint256 */
      0x00
        /* "t1.sol":505:510  a + b */
      dup3
      dup3
      add
        /* "t1.sol":523:529  c >= a */
      dup4
      dup2
      lt
      iszero
        /* "t1.sol":516:530  assert(c >= a) */
      tag_32
      jumpi
      invalid
    tag_32:
        /* "t1.sol":543:544  c */
      swap4
        /* "t1.sol":419:549  function add (uint256 a, uint256 b) internal pure returns (uint256) {... */
      swap3
      pop
      pop
      pop
      jump	// out

    auxdata: 0xa165627a7a723058203e8354a6c5dae8397be0711b032d94d2151c2251f856d5b37e68cb01764cef6d0029
}
