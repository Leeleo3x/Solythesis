    /* "t2.sol":1966:3470  contract StandardToken is ERC20, BasicToken {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "t2.sol":1966:3470  contract StandardToken is ERC20, BasicToken {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "t2.sol":1966:3470  contract StandardToken is ERC20, BasicToken {... */
      mstore(0x40, 0x80)
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_1:
        /* "t2.sol":1966:3470  contract StandardToken is ERC20, BasicToken {... */
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x095ea7b3
      eq
      tag_3
      jumpi
      dup1
      0x18160ddd
      eq
      tag_4
      jumpi
      dup1
      0x23b872dd
      eq
      tag_5
      jumpi
      dup1
      0x70a08231
      eq
      tag_6
      jumpi
      dup1
      0xa9059cbb
      eq
      tag_7
      jumpi
      dup1
      0xdd62ed3e
      eq
      tag_8
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "t2.sol":3087:3302  function approve (address _spender, uint256 _value) public returns (bool) {... */
    tag_3:
      tag_9
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_10
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_10:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":3087:3302  function approve (address _spender, uint256 _value) public returns (bool) {... */
      dup2
      calldataload
      and
      swap1
      0x20
      add
      calldataload
      tag_11
      jump	// in
    tag_9:
      0x40
      dup1
      mload
      swap2
      iszero
      iszero
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "t2.sol":576:602  uint256 public totalSupply */
    tag_4:
      tag_12
      tag_13
      jump	// in
    tag_12:
      0x40
      dup1
      mload
      swap2
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
        /* "t2.sol":2080:3084  function transferFrom (address _from, address _to, uint256 _value) public returns (bool) {... */
    tag_5:
      tag_9
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_15
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_15:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2080:3084  function transferFrom (address _from, address _to, uint256 _value) public returns (bool) {... */
      dup2
      calldataload
      dup2
      and
      swap2
      0x20
      dup2
      add
      calldataload
      swap1
      swap2
      and
      swap1
      0x40
      add
      calldataload
      tag_16
      jump	// in
        /* "t2.sol":1715:1849  function balanceOf (address _owner) public view returns (uint256 balance) {... */
    tag_6:
      tag_12
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_18
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_18:
      pop
        /* "t2.sol":1715:1849  function balanceOf (address _owner) public view returns (uint256 balance) {... */
      calldataload
      sub(shl(0xa0, 0x01), 0x01)
      and
      tag_19
      jump	// in
        /* "t2.sol":811:1712  function transfer (address _to, uint256 _value) public returns (bool) {... */
    tag_7:
      tag_9
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_21
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_21:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":811:1712  function transfer (address _to, uint256 _value) public returns (bool) {... */
      dup2
      calldataload
      and
      swap1
      0x20
      add
      calldataload
      tag_22
      jump	// in
        /* "t2.sol":3305:3468  function allowance (address _owner, address _spender) public view returns (uint256 remaining) {... */
    tag_8:
      tag_12
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_24
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_24:
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":3305:3468  function allowance (address _owner, address _spender) public view returns (uint256 remaining) {... */
      dup2
      calldataload
      dup2
      and
      swap2
      0x20
      add
      calldataload
      and
      tag_25
      jump	// in
        /* "t2.sol":3087:3302  function approve (address _spender, uint256 _value) public returns (bool) {... */
    tag_11:
        /* "t2.sol":3175:3185  msg.sender */
      caller
        /* "t2.sol":3155:3159  bool */
      0x00
        /* "t2.sol":3167:3186  allowed[msg.sender] */
      dup2
      dup2
      mstore
        /* "t2.sol":3167:3174  allowed */
      0x03
        /* "t2.sol":3167:3186  allowed[msg.sender] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":3167:3196  allowed[msg.sender][_spender] */
      dup8
      and
      dup1
      dup6
      mstore
      swap1
      dup4
      mstore
      dup2
      dup5
      keccak256
        /* "t2.sol":3167:3205  allowed[msg.sender][_spender] = _value */
      dup7
      swap1
      sstore
        /* "t2.sol":3216:3254  Approval(msg.sender, _spender, _value) */
      dup2
      mload
      dup7
      dup2
      mstore
      swap2
      mload
        /* "t2.sol":3155:3159  bool */
      swap4
      swap5
        /* "t2.sol":3167:3196  allowed[msg.sender][_spender] */
      swap1
      swap4
        /* "t2.sol":3175:3185  msg.sender */
      swap1
      swap3
        /* "t2.sol":3216:3254  Approval(msg.sender, _spender, _value) */
      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
      swap3
      dup3
      swap1
      sub
      add
      swap1
      log3
      pop
        /* "t2.sol":3275:3279  true */
      0x01
        /* "t2.sol":3087:3302  function approve (address _spender, uint256 _value) public returns (bool) {... */
    tag_26:
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "t2.sol":576:602  uint256 public totalSupply */
    tag_13:
      sload(0x00)
      dup2
      jump	// out
        /* "t2.sol":2080:3084  function transferFrom (address _from, address _to, uint256 _value) public returns (bool) {... */
    tag_16:
        /* "t2.sol":2163:2167  bool */
      0x00
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2183:2200  _to != address(0) */
      dup4
      and
        /* "t2.sol":2175:2201  require(_to != address(0)) */
      tag_28
      jumpi
      0x00
      dup1
      revert
    tag_28:
        /* "t2.sol":2224:2225  0 */
      0x00
        /* "t2.sol":2215:2221  _value */
      dup3
        /* "t2.sol":2215:2225  _value > 0 */
      gt
        /* "t2.sol":2215:2254  _value > 0 && _value <= balances[_from] */
      dup1
      iszero
      tag_29
      jumpi
      pop
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2239:2254  balances[_from] */
      dup5
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2239:2247  balances */
      0x02
        /* "t2.sol":2239:2254  balances[_from] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t2.sol":2229:2254  _value <= balances[_from] */
      dup3
      gt
      iszero
        /* "t2.sol":2215:2254  _value > 0 && _value <= balances[_from] */
    tag_29:
        /* "t2.sol":2207:2255  require(_value > 0 && _value <= balances[_from]) */
      tag_30
      jumpi
      0x00
      dup1
      revert
    tag_30:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2279:2293  allowed[_from] */
      dup5
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2279:2286  allowed */
      0x03
        /* "t2.sol":2279:2293  allowed[_from] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
        /* "t2.sol":2294:2304  msg.sender */
      caller
        /* "t2.sol":2279:2305  allowed[_from][msg.sender] */
      dup5
      mstore
      swap1
      swap2
      mstore
      swap1
      keccak256
      sload
        /* "t2.sol":2269:2305  _value <= allowed[_from][msg.sender] */
      dup3
      gt
      iszero
        /* "t2.sol":2261:2306  require(_value <= allowed[_from][msg.sender]) */
      tag_31
      jumpi
      0x00
      dup1
      revert
    tag_31:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2352:2367  balances[_from] */
      dup5
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2352:2360  balances */
      0x02
        /* "t2.sol":2352:2367  balances[_from] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t2.sol":2337:2348  sum_balance */
      sload(0x01)
        /* "t2.sol":2337:2367  sum_balance >= balances[_from] */
      lt
      iszero
        /* "t2.sol":2330:2368  assert(sum_balance >= balances[_from]) */
      tag_32
      jumpi
      invalid
    tag_32:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2393:2408  balances[_from] */
      dup5
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2393:2401  balances */
      0x02
        /* "t2.sol":2393:2408  balances[_from] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      dup1
      sload
        /* "t2.sol":2378:2389  sum_balance */
      0x01
        /* "t2.sol":2378:2408  sum_balance -= balances[_from] */
      dup1
      sload
      swap2
      swap1
      swap2
      sub
      swap1
      sstore
        /* "t2.sol":2442:2457  balances[_from] */
      sload
        /* "t2.sol":2442:2469  balances[_from].sub(_value) */
      tag_33
      swap1
        /* "t2.sol":2462:2468  _value */
      dup4
        /* "t2.sol":2442:2469  balances[_from].sub(_value) */
      0xffffffff
        /* "t2.sol":2442:2461  balances[_from].sub */
      tag_34
        /* "t2.sol":2442:2469  balances[_from].sub(_value) */
      and
      jump	// in
    tag_33:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2424:2439  balances[_from] */
      dup6
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2424:2432  balances */
      0x02
        /* "t2.sol":2424:2439  balances[_from] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "t2.sol":2424:2469  balances[_from] = balances[_from].sub(_value) */
      dup2
      dup2
      sstore
        /* "t2.sol":2487:2498  sum_balance */
      0x01
        /* "t2.sol":2487:2517  sum_balance += balances[_from] */
      dup1
      sload
      swap1
      swap3
      add
      swap2
      dup3
      swap1
      sstore
        /* "t2.sol":2549:2564  balances[_from] */
      sload
      gt
        /* "t2.sol":2534:2564  sum_balance >= balances[_from] */
      iszero
        /* "t2.sol":2527:2565  assert(sum_balance >= balances[_from]) */
      tag_35
      jumpi
      invalid
    tag_35:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2625:2638  balances[_to] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2625:2633  balances */
      0x02
        /* "t2.sol":2625:2638  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t2.sol":2610:2621  sum_balance */
      sload(0x01)
        /* "t2.sol":2610:2638  sum_balance >= balances[_to] */
      lt
      iszero
        /* "t2.sol":2603:2639  assert(sum_balance >= balances[_to]) */
      tag_36
      jumpi
      invalid
    tag_36:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2664:2677  balances[_to] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2664:2672  balances */
      0x02
        /* "t2.sol":2664:2677  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      dup1
      sload
        /* "t2.sol":2649:2660  sum_balance */
      0x01
        /* "t2.sol":2649:2677  sum_balance -= balances[_to] */
      dup1
      sload
      swap2
      swap1
      swap2
      sub
      swap1
      sstore
        /* "t2.sol":2709:2722  balances[_to] */
      sload
        /* "t2.sol":2709:2734  balances[_to].add(_value) */
      tag_37
      swap1
        /* "t2.sol":2727:2733  _value */
      dup4
        /* "t2.sol":2709:2734  balances[_to].add(_value) */
      0xffffffff
        /* "t2.sol":2709:2726  balances[_to].add */
      tag_38
        /* "t2.sol":2709:2734  balances[_to].add(_value) */
      and
      jump	// in
    tag_37:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2693:2706  balances[_to] */
      dup5
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2693:2701  balances */
      0x02
        /* "t2.sol":2693:2706  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "t2.sol":2693:2734  balances[_to] = balances[_to].add(_value) */
      dup2
      dup2
      sstore
        /* "t2.sol":2752:2763  sum_balance */
      0x01
        /* "t2.sol":2752:2780  sum_balance += balances[_to] */
      dup1
      sload
      swap1
      swap3
      add
      swap2
      dup3
      swap1
      sstore
        /* "t2.sol":2812:2825  balances[_to] */
      sload
      gt
        /* "t2.sol":2797:2825  sum_balance >= balances[_to] */
      iszero
        /* "t2.sol":2790:2826  assert(sum_balance >= balances[_to]) */
      tag_39
      jumpi
      invalid
    tag_39:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2875:2889  allowed[_from] */
      dup5
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":2875:2882  allowed */
      0x03
        /* "t2.sol":2875:2889  allowed[_from] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
        /* "t2.sol":2890:2900  msg.sender */
      caller
        /* "t2.sol":2875:2901  allowed[_from][msg.sender] */
      dup5
      mstore
      swap1
      swap2
      mstore
      swap1
      keccak256
      sload
        /* "t2.sol":2875:2913  allowed[_from][msg.sender].sub(_value) */
      tag_40
      swap1
        /* "t2.sol":2906:2912  _value */
      dup4
        /* "t2.sol":2875:2913  allowed[_from][msg.sender].sub(_value) */
      0xffffffff
        /* "t2.sol":2875:2905  allowed[_from][msg.sender].sub */
      tag_34
        /* "t2.sol":2875:2913  allowed[_from][msg.sender].sub(_value) */
      and
      jump	// in
    tag_40:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":2846:2860  allowed[_from] */
      dup1
      dup7
      and
      0x00
      dup2
      dup2
      mstore
        /* "t2.sol":2846:2853  allowed */
      0x03
        /* "t2.sol":2846:2860  allowed[_from] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
        /* "t2.sol":2861:2871  msg.sender */
      caller
        /* "t2.sol":2846:2872  allowed[_from][msg.sender] */
      dup5
      mstore
      dup3
      mstore
      swap2
      dup3
      swap1
      keccak256
        /* "t2.sol":2846:2913  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value) */
      swap5
      swap1
      swap5
      sstore
        /* "t2.sol":2924:2952  Transfer(_from, _to, _value) */
      dup1
      mload
      dup7
      dup2
      mstore
      swap1
      mload
      swap3
      dup8
      and
      swap4
        /* "t2.sol":2846:2860  allowed[_from] */
      swap2
      swap3
        /* "t2.sol":2924:2952  Transfer(_from, _to, _value) */
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap3
      swap2
      dup2
      swap1
      sub
      swap1
      swap2
      add
      swap1
      log3
        /* "t2.sol":2988:2999  sum_balance */
      sload(0x01)
        /* "t2.sol":2973:2984  totalSupply */
      sload(0x00)
        /* "t2.sol":2973:2999  totalSupply == sum_balance */
      eq
        /* "t2.sol":2966:3000  assert(totalSupply == sum_balance) */
      tag_41
      jumpi
      invalid
    tag_41:
      pop
        /* "t2.sol":3015:3019  true */
      0x01
        /* "t2.sol":2080:3084  function transferFrom (address _from, address _to, uint256 _value) public returns (bool) {... */
      swap4
      swap3
      pop
      pop
      pop
      jump	// out
        /* "t2.sol":1715:1849  function balanceOf (address _owner) public view returns (uint256 balance) {... */
    tag_19:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":1810:1826  balances[_owner] */
      and
        /* "t2.sol":1772:1787  uint256 balance */
      0x00
        /* "t2.sol":1810:1826  balances[_owner] */
      swap1
      dup2
      mstore
        /* "t2.sol":1810:1818  balances */
      0x02
        /* "t2.sol":1810:1826  balances[_owner] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
      swap1
        /* "t2.sol":1715:1849  function balanceOf (address _owner) public view returns (uint256 balance) {... */
      jump	// out
        /* "t2.sol":811:1712  function transfer (address _to, uint256 _value) public returns (bool) {... */
    tag_22:
        /* "t2.sol":875:879  bool */
      0x00
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":895:912  _to != address(0) */
      dup4
      and
        /* "t2.sol":887:913  require(_to != address(0)) */
      tag_45
      jumpi
      0x00
      dup1
      revert
    tag_45:
        /* "t2.sol":936:937  0 */
      0x00
        /* "t2.sol":927:933  _value */
      dup3
        /* "t2.sol":927:937  _value > 0 */
      gt
        /* "t2.sol":927:971  _value > 0 && _value <= balances[msg.sender] */
      dup1
      iszero
      tag_46
      jumpi
      pop
        /* "t2.sol":960:970  msg.sender */
      caller
        /* "t2.sol":951:971  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":951:959  balances */
      0x02
        /* "t2.sol":951:971  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t2.sol":941:971  _value <= balances[msg.sender] */
      dup3
      gt
      iszero
        /* "t2.sol":927:971  _value > 0 && _value <= balances[msg.sender] */
    tag_46:
        /* "t2.sol":919:972  require(_value > 0 && _value <= balances[msg.sender]) */
      tag_47
      jumpi
      0x00
      dup1
      revert
    tag_47:
        /* "t2.sol":1027:1037  msg.sender */
      caller
        /* "t2.sol":1018:1038  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":1018:1026  balances */
      0x02
        /* "t2.sol":1018:1038  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t2.sol":1003:1014  sum_balance */
      sload(0x01)
        /* "t2.sol":1003:1038  sum_balance >= balances[msg.sender] */
      lt
      iszero
        /* "t2.sol":996:1039  assert(sum_balance >= balances[msg.sender]) */
      tag_48
      jumpi
      invalid
    tag_48:
        /* "t2.sol":1073:1083  msg.sender */
      caller
        /* "t2.sol":1064:1084  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":1064:1072  balances */
      0x02
        /* "t2.sol":1064:1084  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      dup1
      sload
        /* "t2.sol":1049:1060  sum_balance */
      0x01
        /* "t2.sol":1049:1084  sum_balance -= balances[msg.sender] */
      dup1
      sload
      swap2
      swap1
      swap2
      sub
      swap1
      sstore
        /* "t2.sol":1123:1143  balances[msg.sender] */
      sload
        /* "t2.sol":1123:1155  balances[msg.sender].sub(_value) */
      tag_49
      swap1
        /* "t2.sol":1148:1154  _value */
      dup4
        /* "t2.sol":1123:1155  balances[msg.sender].sub(_value) */
      0xffffffff
        /* "t2.sol":1123:1147  balances[msg.sender].sub */
      tag_34
        /* "t2.sol":1123:1155  balances[msg.sender].sub(_value) */
      and
      jump	// in
    tag_49:
        /* "t2.sol":1109:1119  msg.sender */
      caller
        /* "t2.sol":1100:1120  balances[msg.sender] */
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":1100:1108  balances */
      0x02
        /* "t2.sol":1100:1120  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "t2.sol":1100:1155  balances[msg.sender] = balances[msg.sender].sub(_value) */
      dup2
      dup2
      sstore
        /* "t2.sol":1173:1184  sum_balance */
      0x01
        /* "t2.sol":1173:1208  sum_balance += balances[msg.sender] */
      dup1
      sload
      swap1
      swap3
      add
      swap2
      dup3
      swap1
      sstore
        /* "t2.sol":1240:1260  balances[msg.sender] */
      sload
      gt
        /* "t2.sol":1225:1260  sum_balance >= balances[msg.sender] */
      iszero
        /* "t2.sol":1218:1261  assert(sum_balance >= balances[msg.sender]) */
      tag_50
      jumpi
      invalid
    tag_50:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":1321:1334  balances[_to] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":1321:1329  balances */
      0x02
        /* "t2.sol":1321:1334  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "t2.sol":1306:1317  sum_balance */
      sload(0x01)
        /* "t2.sol":1306:1334  sum_balance >= balances[_to] */
      lt
      iszero
        /* "t2.sol":1299:1335  assert(sum_balance >= balances[_to]) */
      tag_51
      jumpi
      invalid
    tag_51:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":1360:1373  balances[_to] */
      dup4
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":1360:1368  balances */
      0x02
        /* "t2.sol":1360:1373  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      dup1
      sload
        /* "t2.sol":1345:1356  sum_balance */
      0x01
        /* "t2.sol":1345:1373  sum_balance -= balances[_to] */
      dup1
      sload
      swap2
      swap1
      swap2
      sub
      swap1
      sstore
        /* "t2.sol":1405:1418  balances[_to] */
      sload
        /* "t2.sol":1405:1430  balances[_to].add(_value) */
      tag_52
      swap1
        /* "t2.sol":1423:1429  _value */
      dup4
        /* "t2.sol":1405:1430  balances[_to].add(_value) */
      0xffffffff
        /* "t2.sol":1405:1422  balances[_to].add */
      tag_38
        /* "t2.sol":1405:1430  balances[_to].add(_value) */
      and
      jump	// in
    tag_52:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":1389:1402  balances[_to] */
      dup5
      and
      0x00
      swap1
      dup2
      mstore
        /* "t2.sol":1389:1397  balances */
      0x02
        /* "t2.sol":1389:1402  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      keccak256
        /* "t2.sol":1389:1430  balances[_to] = balances[_to].add(_value) */
      dup2
      dup2
      sstore
        /* "t2.sol":1448:1459  sum_balance */
      0x01
        /* "t2.sol":1448:1476  sum_balance += balances[_to] */
      dup1
      sload
      swap1
      swap3
      add
      swap2
      dup3
      swap1
      sstore
        /* "t2.sol":1508:1521  balances[_to] */
      sload
      gt
        /* "t2.sol":1493:1521  sum_balance >= balances[_to] */
      iszero
        /* "t2.sol":1486:1522  assert(sum_balance >= balances[_to]) */
      tag_53
      jumpi
      invalid
    tag_53:
        /* "t2.sol":1547:1580  Transfer(msg.sender, _to, _value) */
      0x40
      dup1
      mload
      dup4
      dup2
      mstore
      swap1
      mload
      sub(shl(0xa0, 0x01), 0x01)
      dup6
      and
      swap2
        /* "t2.sol":1556:1566  msg.sender */
      caller
      swap2
        /* "t2.sol":1547:1580  Transfer(msg.sender, _to, _value) */
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap2
      dup2
      swap1
      sub
      0x20
      add
      swap1
      log3
        /* "t2.sol":1616:1627  sum_balance */
      sload(0x01)
        /* "t2.sol":1601:1612  totalSupply */
      sload(0x00)
        /* "t2.sol":1601:1627  totalSupply == sum_balance */
      eq
        /* "t2.sol":1594:1628  assert(totalSupply == sum_balance) */
      tag_54
      jumpi
      invalid
    tag_54:
      pop
        /* "t2.sol":1643:1647  true */
      0x01
        /* "t2.sol":1636:1647  return true */
      jump(tag_26)
        /* "t2.sol":3305:3468  function allowance (address _owner, address _spender) public view returns (uint256 remaining) {... */
    tag_25:
      sub(shl(0xa0, 0x01), 0x01)
        /* "t2.sol":3420:3435  allowed[_owner] */
      swap2
      dup3
      and
        /* "t2.sol":3380:3397  uint256 remaining */
      0x00
        /* "t2.sol":3420:3435  allowed[_owner] */
      swap1
      dup2
      mstore
        /* "t2.sol":3420:3427  allowed */
      0x03
        /* "t2.sol":3420:3435  allowed[_owner] */
      0x20
      swap1
      dup2
      mstore
      0x40
      dup1
      dup4
      keccak256
        /* "t2.sol":3420:3445  allowed[_owner][_spender] */
      swap4
      swap1
      swap5
      and
      dup3
      mstore
      swap2
      swap1
      swap2
      mstore
      keccak256
      sload
      swap1
        /* "t2.sol":3305:3468  function allowance (address _owner, address _spender) public view returns (uint256 remaining) {... */
      jump	// out
        /* "t2.sol":305:416  function sub (uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_34:
        /* "t2.sol":364:371  uint256 */
      0x00
        /* "t2.sol":391:392  a */
      dup3
        /* "t2.sol":386:387  b */
      dup3
        /* "t2.sol":386:392  b <= a */
      gt
      iszero
        /* "t2.sol":379:393  assert(b <= a) */
      tag_58
      jumpi
      invalid
    tag_58:
      pop
        /* "t2.sol":406:411  a - b */
      swap1
      sub
      swap1
        /* "t2.sol":305:416  function sub (uint256 a, uint256 b) internal pure returns (uint256) {... */
      jump	// out
        /* "t2.sol":419:549  function add (uint256 a, uint256 b) internal pure returns (uint256) {... */
    tag_38:
        /* "t2.sol":478:485  uint256 */
      0x00
        /* "t2.sol":505:510  a + b */
      dup3
      dup3
      add
        /* "t2.sol":523:529  c >= a */
      dup4
      dup2
      lt
      iszero
        /* "t2.sol":516:530  assert(c >= a) */
      tag_60
      jumpi
      invalid
    tag_60:
        /* "t2.sol":543:544  c */
      swap4
        /* "t2.sol":419:549  function add (uint256 a, uint256 b) internal pure returns (uint256) {... */
      swap3
      pop
      pop
      pop
      jump	// out

    auxdata: 0xa165627a7a7230582030c30299c1f0b987947e7b1b5b65a97e4fb4b732185de251a8b4700d15a4e3d00029
}
